"""Add soft delete to roles and permissions models

Revision ID: 49952d38668d
Revises: 5efc44157107
Create Date: 2024-09-22 17:08:02.870260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
# from sqlalchemy.dialects import postgresql

# from sqlalchemy.orm import declarative_base
# from sqlalchemy import create_engine
# from app.database.database import SQLALCHEMY_DATABASE_URL

# Base = declarative_base()
# engine = create_engine(SQLALCHEMY_DATABASE_URL)


# revision identifiers, used by Alembic.
revision: str = '49952d38668d'
down_revision: Union[str, None] = '5efc44157107'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    existing_enums = inspector.get_enums()
    # if 'role_status_type' not in [e['name'] for e in existing_enums]:
    #     # Si no existe, créalo
    #     op.execute("CREATE TYPE role_status_type AS ENUM ('active', 'inactive')")
    
    if 'permission_status_type' not in [e['name'] for e in existing_enums]:
        # Si no existe, créalo
        op.execute("CREATE TYPE permission_status_type AS ENUM ('active', 'inactive')")


    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('permissions', sa.Column('status', sa.Enum('active', 'inactive', name='permission_status_type'), nullable=True))
    op.add_column('permissions', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('permissions', sa.Column('updated_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('permissions', 'updated_at')
    op.drop_column('permissions', 'created_at')
    op.drop_column('permissions', 'status')
    # ### end Alembic commands ###
